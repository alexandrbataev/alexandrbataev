

             WITH main_data AS (
         SELECT o.order_id,
            o.date AS order_date,
            date(o.date) AS dt,
            s.name AS status,
            regions.region,
            cities.name AS city,
            o.sales_sum,
            o.is_posted,
            o.deletion_mark,
            nomenclatures.is_service,
            nomenclatures.article AS nomen_article,
            manufacturers.name AS manufacturer_name,
            dn.purchase_price AS item_sales_sum,
               CASE
                   WHEN c2.name = 'Комплектующее'::text THEN 'Комплектующее'::text
                   WHEN c2.name = ANY (ARRAY['Тумбы и комоды'::text, 'Стулья и табуреты'::text, 'Столы'::text, 'Мягкая мебель'::text, 'Стеллажи и полки'::text, 'Прихожие'::text]) THEN 'Мебель'::text
                   WHEN c3.name IS NULL THEN 'Не определена'::text
                   ELSE c3.name
               END AS accessory_cat_1,
            c2.name AS accessory_cat_2,
            c1.name AS accessory_cat_3
           FROM dwh.orders o
             LEFT JOIN dwh.deliveries ON deliveries.order_guid = o.guid
             LEFT JOIN dwh.delivery_nomenclatures__v2 dn ON dn.delivery_guid = deliveries.guid
             LEFT JOIN ( SELECT nomenclatures_1.guid AS nomenclatures_guid,
                    nomenclatures_1.is_service,
                    nomenclatures_1.manufacturer_guid,
                    nomenclatures_1.category_guid,
                    nomenclatures_1.article
                   FROM dwh.nomenclatures nomenclatures_1) nomenclatures ON dn.num_guid = nomenclatures.nomenclatures_guid
                   LEFT JOIN dwh.manufacturers ON nomenclatures.manufacturer_guid = manufacturers.guid
             LEFT JOIN dwh.category_nom c1 ON nomenclatures.category_guid = c1.guid
             LEFT JOIN dwh.category_nom c2 ON c1.parent_guid = c2.guid
             LEFT JOIN dwh.category_nom c3 ON c2.parent_guid = c3.guid
             LEFT JOIN dwh.cities cities ON cities.guid = o.city_guid
             LEFT JOIN analytics.regions ON regions.city = cities.name
             LEFT JOIN ( SELECT eso.guid,
                    eso.name
                   FROM dwh.enum_statuses_orders eso) s ON s.guid = o.status::uuid
          WHERE date(o.date) >= '2024-01-01'::date AND nomenclatures.is_service IS FALSE
        ), aggregated_metrics AS (
         SELECT main_data.dt,
            main_data.order_date,
            main_data.order_id,
            main_data.region,
            main_data.city,
            main_data.status,
            main_data.nomen_article,
            main_data.manufacturer_name,
            main_data.accessory_cat_1,
            main_data.accessory_cat_2,
			main_data.accessory_cat_3,            
            sum(
                CASE
                    WHEN (main_data.status <> ALL (ARRAY['Проект'::text, 'Отказ проекта'::text, 'Отказ'::text])) AND main_data.is_posted IS TRUE THEN main_data.item_sales_sum
                    ELSE 0::double precision
                END) AS total_sales_sum,

            count(
                CASE
                    WHEN (main_data.status <> ALL (ARRAY['Проект'::text, 'Отказ проекта'::text, 'Отказ'::text])) AND main_data.is_posted IS TRUE THEN main_data.order_id
                    ELSE NULL::text
                END) AS orders_count,
            sum(
                CASE
                    WHEN (main_data.status <> ALL (ARRAY['Проект'::text, 'Отказ проекта'::text, 'Отказ'::text])) AND main_data.is_posted IS TRUE THEN main_data.sales_sum
                    ELSE 0::double precision
                END) / NULLIF(count(
                CASE
                    WHEN (main_data.status <> ALL (ARRAY['Проект'::text, 'Отказ проекта'::text, 'Отказ'::text])) AND main_data.is_posted IS TRUE THEN main_data.order_id
                    ELSE NULL::text
                END), 0)::double precision AS average_check 
           FROM main_data
          GROUP BY main_data.dt, main_data.order_date, main_data.order_id, main_data.region, main_data.city, main_data.status, main_data.is_posted, main_data.nomen_article,
            main_data.manufacturer_name,
            main_data.accessory_cat_1,
            main_data.accessory_cat_2,
			main_data.accessory_cat_3
        )
 SELECT dt,
    order_date,
    order_id,
    region,
    city,
    status,
    nomen_article,
    manufacturer_name,
    accessory_cat_1,
    accessory_cat_2,
	accessory_cat_3,
    total_sales_sum,
    orders_count,
    average_check
    
   FROM aggregated_metrics
